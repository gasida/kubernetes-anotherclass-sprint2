pipeline {
    agent any

    environment {
        DOCKERHUB_USERNAME = 'gasida'
        GITHUB_URL = 'https://github.com/gasida/kubernetes-anotherclass-sprint2.git'
        CLASS_NUM = '2212'
    }
    
    stages {
        stage('소스파일 체크아웃') {
            steps {
                git branch: 'main', url: 'https://github.com/k8s-1pro/kubernetes-anotherclass-api-tester.git'
            }
        }

        stage('소스 빌드') {
            steps {
                echo "source build"
            }
        }

        stage('릴리즈파일 체크아웃') {
            steps {
                checkout scmGit(branches: [[name: '*/main']],
                    extensions: [[$class: 'SparseCheckoutPaths',
                    sparseCheckoutPaths: [[path: "/${CLASS_NUM}"]]]],
					userRemoteConfigs: [[url: "${GITHUB_URL}"]])
            }
        }

        stage('컨테이너 빌드') {
            steps {
                echo "container build"
            }
        }

        stage('컨테이너 업로드') {
            steps {
                echo "container upload"
            }
        }

        stage('쿠버네티스 배포') {
            steps {
                // K8S 배포
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/namespace.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/configmap.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/secret.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/service.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/deployment.yaml"
            }
        }

        stage('배포 확인') {
            steps {
                // 10초 대기
                sh "sleep 10"

                // K8S 배포
                sh "kubectl get -f ./${CLASS_NUM}/deploy/k8s/namespace.yaml"
                sh "kubectl get -f ./${CLASS_NUM}/deploy/k8s/configmap.yaml"
                sh "kubectl get -f ./${CLASS_NUM}/deploy/k8s/secret.yaml"
                sh "kubectl get -f ./${CLASS_NUM}/deploy/k8s/service.yaml"
                sh "kubectl get -f ./${CLASS_NUM}/deploy/k8s/deployment.yaml"
            }
        }
    }
}